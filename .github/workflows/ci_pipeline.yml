name: CI/CD Pipeline

on:
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    name: Python Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements/test.txt
    
    - name: Run tests
      run: |
        python -m pytest --cov=src tests/ -v
    
    - name: Generate coverage report
      run: |
        python -m pytest --cov=src --cov-report=xml tests/
    
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

    - name: Upload test results to Codecov
      if: ${{ !cancelled() }}
      uses: codecov/test-results-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./junit.xml

  test-docker:
    name: Docker Test Image
    runs-on: ubuntu-latest
    needs: test-python
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build test Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        target: test
        tags: ca-learning:test
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Run tests in Docker container
      run: |
        docker run --rm ca-learning:test

  build-dev:
    name: Docker Dev Image
    runs-on: ubuntu-latest
    needs: test-docker
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build dev Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        target: dev
        tags: ca-learning:dev
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-prod:
    name: Docker Production Image
    runs-on: ubuntu-latest
    needs: test-docker
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build production Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        target: prod
        tags: ca-learning:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Uncomment this section when ready to push to a registry
    # - name: Login to Docker Hub
    #   if: github.event_name != 'pull_request'
    #   uses: docker/login-action@v2
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    # - name: Push production image to registry
    #   if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    #   uses: docker/build-push-action@v4
    #   with:
    #     context: .
    #     target: prod
    #     push: true
    #     tags: yourusername/ca-learning:latest
    #     cache-from: type=gha
    #     cache-to: type=gha,mode=max